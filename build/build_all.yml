parameters:
  # GBALLOC_LL_TYPE_VALUES contains values from GBALLOC_LL_TYPE_VALUES of c-pal's CMakeLists.txt.
  # not all values listed in the CMakeLists need to be listed here - only those for which a completely separate build is done
  # GBALLOC_LL_TYPE_VALUES is an array of strings
  - name: GBALLOC_LL_TYPE_VALUES
    type: object
    default: ["PASSTHROUGH", "JEMALLOC"]

  # FSANITIZE_TYPE_VALUES are the same as cmakelists "fsanitize" option used to pass (or not) /fsanitize=address to the compiler.
  - name: FSANITIZE_TYPE_VALUES
    type: object
    default: ["ON", "OFF"]

  # ARCH_TYPE_VALUES exists merely for example for future extension capabilities
  # it provides the "walked path" of how to extend the pipeline with a completely different orthogonal parameter that can take an array of string of values
  - name: ARCH_TYPE_VALUES
    type: object
    #default: ["x64", "x86"]
    # TODO: for now only x64 is supported, seems that we have some errors on x86
    default: ["x64"]

  # BUILD_CONFIGURATION_TYPE_VALUES is a list of build configurations to be used in the pipeline
  - name: BUILD_CONFIGURATION_TYPE_VALUES
    type: object
    default: ["Debug", "RelWithDebInfo"]

jobs:
- ${{ each GBALLOC_LL_TYPE in parameters.GBALLOC_LL_TYPE_VALUES }}:
  - ${{ each FSANITIZE_TYPE in parameters.FSANITIZE_TYPE_VALUES }}:
    - ${{ each ARCH_TYPE in parameters.ARCH_TYPE_VALUES }}:
      - ${{ each BUILD_CONFIGURATION_TYPE in parameters.BUILD_CONFIGURATION_TYPE_VALUES }}:
        # - ${{ if not( and( eq( GBALLOC_LL_TYPE , 'MIMALLOC' ), eq(FSANITIZE_TYPE, 'ON'))) }}: <==this fails to compile, reasons "2 parameters passed to if". The below line is equivalent.
        # there is no point in running mimalloc and fsanitize, so that combination is excluded from the whole build.
        - ${{ if or( ne( GBALLOC_LL_TYPE , 'JEMALLOC' ), ne(FSANITIZE_TYPE, 'ON')) }}:
          - template: gated_jobs/build_and_run_tests.yml
            parameters:
              # BUILD_SUFFIX is the concatenation of all the parameters. It exists for every single template. Because all jobs/etc in a pipeline need to have different names. So a job name will end with ${{ parameters.BUILDSUFFIX }}
              BUILD_SUFFIX: _${{ BUILD_CONFIGURATION_TYPE }}_${{ GBALLOC_LL_TYPE }}_FSANITIZE_${{ FSANITIZE_TYPE }}_${{ ARCH_TYPE }}
              # passing the other parameters, each separated for easy consumption. The invoked template MUST have all these parameters listed.
              GBALLOC_LL_TYPE: ${{ GBALLOC_LL_TYPE }}
              build_configuration: ${{ BUILD_CONFIGURATION_TYPE }}
              FSANITIZE_TYPE: ${{ FSANITIZE_TYPE }}
              ARCH_TYPE: ${{ ARCH_TYPE }}
